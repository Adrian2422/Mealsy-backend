{"version":3,"sources":["../../../src/middlewares/validators/recipes.validator.js"],"names":["validateRecipe","req","res","next","newData","validData","body","name","tags","photo","ingredients","instructions","link","creator","toUpperCase","slice","push","length","split","match","forEach","item","key","amount","weight","unit","options","protocols","require_protocol","require_valid_protocol","engravedData","includes"],"mappings":";;;AAGwBA,c,CAHxB,sCACA,oCAEe,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,IAAlC,EAAwC;AACrD,MAAMC,UAAU,EAAhB;AACA,MAAMC,YAAY,EAAlB,CAFqD;AAGmBJ,MAAIK,IAHvB,CAG7CC,IAH6C,aAG7CA,IAH6C,CAGvCC,IAHuC,aAGvCA,IAHuC,CAGjCC,KAHiC,aAGjCA,KAHiC,CAG1BC,WAH0B,aAG1BA,WAH0B,CAGbC,YAHa,aAGbA,YAHa,CAGCC,IAHD,aAGCA,IAHD,CAGOC,OAHP,aAGOA,OAHP;AAIrD;AACAT,UAAQG,IAAR,QAAkBA,KAAK,CAAL,EAAQO,WAAR,EAAlB,GAA0CP,KAAKQ,KAAL,CAAW,CAAX,CAA1C;AACAV,YAAUW,IAAV,CAAeT,KAAKU,MAAL,IAAe,EAA9B;AACA;AACAb,UAAQI,IAAR,GAAeA,KAAKU,KAAL,CAAW,GAAX,CAAf;AACAb,YAAUW,IAAV,CAAeR,KAAKU,KAAL,CAAW,GAAX,EAAgBD,MAAhB,IAA0B,CAAzC;AACA;AACA,MAAGR,MAAMQ,MAAN,GAAe,CAAlB,EAAoB;AAClBZ,cAAUW,IAAV,CAAeP,MAAMU,KAAN,CAAY,uBAAZ,KAAwC,IAAvD;AACD,GAFD,MAEO;AACLd,cAAUW,IAAV,CAAe,IAAf;AACD;AACDZ,UAAQK,KAAR,GAAgBA,MAAMQ,MAAN,GAAeR,KAAf,GAAuB,IAAvC;AACA;AACAL,UAAQM,WAAR,GAAsB,EAAtB;AACA,MAAIA,YAAYO,MAAZ,GAAqB,CAArB,IAA0B,OAAOP,WAAP,KAAuB,OAArD,EAA8D;AAC5DA,gBAAYU,OAAZ,CAAoB,UAACC,IAAD,EAAOC,GAAP,EAAe;AACjClB,cAAQM,WAAR,CAAoBM,IAApB,CAAyB;AACvBO,gBAAQF,KAAKE,MADU;AAEvBhB,cAAMc,KAAKd,IAFY;AAGvBiB,gBAAQH,KAAKG,MAHU;AAIvBC,cAAMJ,KAAKI,IAJY,EAAzB;;AAMD,KAPD;AAQApB,cAAUW,IAAV,CAAe,IAAf;AACD,GAVD,MAUO;AACLX,cAAUW,IAAV,CAAe,KAAf;AACD;AACD;AACAZ,UAAQO,YAAR,GAAuBA,YAAvB;AACAN,YAAUW,IAAV,CAAeL,aAAaM,MAAb,GAAsB,CAArC;AACA;AACA,MAAIL,KAAKK,MAAL,GAAc,CAAlB,EAAqB;AACnB,QAAMS,UAAU;AACdC,iBAAW,CAAC,MAAD,EAAS,OAAT,CADG;AAEdC,wBAAkB,IAFJ;AAGdC,8BAAwB,IAHV,EAAhB;;AAKAxB,cAAUW,IAAV,CAAe,sBAAMJ,IAAN,CAAf;AACD,GAPD,MAOO;AACLP,cAAUW,IAAV,CAAe,IAAf;AACD;AACDZ,UAAQQ,IAAR,GAAeA,KAAKK,MAAL,GAAcL,IAAd,GAAqB,IAApC;AACA;AACAP,YAAUW,IAAV,CAAe,+BAAgBH,OAAhB,CAAf;AACAT,UAAQS,OAAR,GAAkBA,OAAlB;AACA;AACAZ,MAAI6B,YAAJ,GAAmBzB,UAAU0B,QAAV,CAAmB,KAAnB,IAA4B,EAA5B,gBAAsC3B,OAAtC,CAAnB;AACAD;AACD","file":"recipes.validator.js","sourcesContent":["import { isURL } from 'validator'\r\nimport { isValidObjectId } from \"mongoose\";\r\n\r\nexport default function validateRecipe(req, res, next) {\r\n  const newData = {};\r\n  const validData = [];\r\n  const { name, tags, photo, ingredients, instructions, link, creator } = req.body;\r\n  // validate name\r\n  newData.name = `${name[0].toUpperCase()}${name.slice(1)}`;\r\n  validData.push(name.length <= 50);\r\n  // validate tags\r\n  newData.tags = tags.split(\",\");\r\n  validData.push(tags.split(\",\").length <= 5);\r\n  // validate photo link \r\n  if(photo.length > 0){\r\n    validData.push(photo.match(/\\.(jpeg|jpg|gif|png)$/) != null);\r\n  } else {\r\n    validData.push(true);\r\n  }\r\n  newData.photo = photo.length ? photo : null;\r\n  // validate ingredients\r\n  newData.ingredients = [];\r\n  if (ingredients.length > 0 || typeof ingredients === 'array') {\r\n    ingredients.forEach((item, key) => {\r\n      newData.ingredients.push({\r\n        amount: item.amount,\r\n        name: item.name,\r\n        weight: item.weight,\r\n        unit: item.unit,\r\n      });\r\n    });\r\n    validData.push(true);\r\n  } else {\r\n    validData.push(false);\r\n  }\r\n  // validate instructions\r\n  newData.instructions = instructions;\r\n  validData.push(instructions.length > 0);\r\n  // validate link\r\n  if (link.length > 0) {\r\n    const options = {\r\n      protocols: [\"http\", \"https\"],\r\n      require_protocol: true,\r\n      require_valid_protocol: true,\r\n    };\r\n    validData.push(isURL(link));\r\n  } else {\r\n    validData.push(true);\r\n  }\r\n  newData.link = link.length ? link : null;\r\n  // validate creator\r\n  validData.push(isValidObjectId(creator));\r\n  newData.creator = creator;\r\n  // check if any validation was failed\r\n  req.engravedData = validData.includes(false) ? {} : { ...newData };\r\n  next();\r\n}\r\n"]}